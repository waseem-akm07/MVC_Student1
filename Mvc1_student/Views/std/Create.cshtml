@*@model Mvc1_student.Models.tb1_std*@
@model Mvc1_student.Models.studentViewModel


@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "std", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Student Info</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2"> Student Name</label>
            @*@Html.LabelFor(model => model.std_name, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.std_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.std_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2"> Address</label>
            @*@Html.LabelFor(model => model.std_add, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.std_add, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.std_add, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2"> Phone</label>
            @*@Html.LabelFor(model => model.std_phn, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.std_phn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.std_phn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2"> Class</label>
            @*@Html.LabelFor(model => model.cls_name, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.cls_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cls_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2"> Subjects</label>
            @*@Html.LabelFor(model => model.sub_one, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.sub_one, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.sub_one, "", new { @class = "text-danger" })
                @*<span> </span>*@
                @Html.EditorFor(model => model.sub_two, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.sub_two, "", new { @class = "text-danger" })
                @*<span> </span>*@
                @Html.EditorFor(model => model.sub_three, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.sub_three, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.sub_two, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.sub_two, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.sub_two, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sub_three, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.sub_three, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.sub_three, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">

            <div class="col-md-10">
                @if (ViewBag != null)
                {
                    <h2>@ViewBag.msg</h2>
                }
            </div>
        </div>


        @*<div class="form-group">
                @Html.LabelFor(model => model.std_clsid, "std_clsid", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("std_clsid", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.std_clsid, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.std_subid, "std_subid", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("std_subid", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.std_subid, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
